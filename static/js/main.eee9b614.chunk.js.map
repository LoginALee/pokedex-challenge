{"version":3,"sources":["components/PokemonCard/PokemonCard.js","components/PokemonList/PokemonList.js","components/Header/Header.js","components/Cart/Cart.js","components/Order/Order.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","pokemon","onAdd","useState","open","setOpen","id","name","height","weight","img","className","data-testid","onClick","aria-controls","aria-expanded","src","Collapse","in","PokemonList","props","data","setData","fetchURL","imageURL","getData","a","fetchPokemon","pokemons","fetch","response","json","results","item","fetchPokemonData","push","Error","url","useEffect","then","title","map","Header","countCartItems","navStyle","color","style","to","toast","configure","Cart","cartItems","onRemove","onClean","onCreateOrder","totalPrice","reduce","c","cuantity","length","toFixed","stripeKey","process","token","type","details","items","total","billingAddress","shippingAddress","amount","Order","order","created","card","address_city","email","country","App","setCartItems","setOrder","exist","find","filter","path","render","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eee9b614.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport Collapse from 'react-bootstrap/Collapse'\n\nconst PokemonCard = ({ pokemon, onAdd }) => {\n  const [open, setOpen] = useState(false);\n  const { id, name, height, weight, img } = pokemon;\n\n  return (\n    <div className=\"col-4\" data-testid=\"show-data\">\n      <div className=\"card mt-2\" onClick={() => setOpen(!open)} aria-controls={\"card-\" + id} aria-expanded={open}>\n        <img src={img} className=\"card-img-top\"/>\n          <div className=\"card-body\" id={\"card-\" + name}>\n            <h5 className=\"card-title\">{name}</h5>\n              <Collapse in={open}>\n               <div>\n                 <p className=\"card-text\">\n                   Height: {height}\n                 </p>\n                 <p className=\"card-text\">\n                   Weight: {weight}\n                 </p>\n                 <p className=\"card-text\">\n                   Price: ${id}\n                 </p>\n                 <button onClick={() => onAdd(pokemon)} className=\"btn btn-primary\">Add to cart</button>\n              </div>\n             </Collapse>\n           </div>\n       </div>\n     </div>\n   )\n}\n\nexport default PokemonCard;\n","import React, { useEffect, useState } from 'react'\nimport './PokemonList.css';\nimport PokemonCard from '../PokemonCard/PokemonCard';\n\nconst PokemonList = (props) => {\n  const { onAdd } = props;\n  const [data, setData] = useState(null);\n  const fetchURL = \"https://pokeapi.co/api/v2/pokemon?limit=30\";\n  const imageURL = 'https://pokeres.bastionbot.org/images/pokemon';\n\n  const getData = async () => await fetchPokemon()\n\n  useEffect(() => {\n    getData().then((data) => setData(data))\n  }, [])\n\n  async function fetchPokemon(){\n    let pokemons = [];\n    try{\n      const response = await fetch(`${fetchURL}`)\n      const json = await response.json();\n\n      for (const item of json.results){\n        let pokemon = await fetchPokemonData(item);\n        pokemon.img = `${imageURL}/${pokemon.id}.png`;\n        pokemons.push(pokemon);\n      }\n\n      return pokemons;\n    }catch(error){\n      throw new Error(error);\n    }\n  }\n\n  async function fetchPokemonData(pokemon){\n    let url = pokemon.url;\n    try{\n      const response = await fetch(url);\n      const json = await response.json();\n      return json;\n    }catch(error){\n      throw new Error(error);\n    }\n  }\n\n    return (\n      <div title=\"row\" className=\"row mt-2\">\n          {data ? \n            (data.map((item) => \n              <PokemonCard \n                pokemon={item}\n                 key={item.name} \n                 onAdd={onAdd}\n               />\n            )) : <div data-testid=\"loading\" className=\"bg-warning text-center\">Loading...</div> }\n          </div>\n     )\n}\n\nexport default PokemonList;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const {countCartItems} = props;\n  const navStyle = { color: 'white' };\n\n  return(\n    <nav>\n      <Link style={navStyle} to='/'>\n        <h1>Home</h1>\n      </Link>\n      <ul className=\"nav-links\">\n        <Link style={navStyle} to='/cart'>\n          <li> Cart{' '}\n            {countCartItems ? (\n              <button className=\"badge badge-success badge-pill\">{countCartItems}</button>\n            ) : ('')} \n          </li>\n        </Link>\n        <Link style={navStyle} to='/orders'>\n          <li>Order</li>\n        </Link>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nconst Cart = (props) => {\n  const { cartItems, onAdd, onRemove, onClean, onCreateOrder } = props;\n  const totalPrice = cartItems.reduce((a, c) => a + c.id * c.cuantity, 0);\n\n  const handleToken = (token) => {\n    toast(\"Success! Your pokemons are on their way\", { type: \"success\" });\n    let Order = {\n      details: token,\n      items: { cartItems, total: totalPrice }\n    }\n    onCreateOrder(Order);\n    onClean();\n  }\n\n  return(\n    <aside className=\"col align-self-end\"> <h2> Cart items</h2>\n      <div>\n        {!cartItems.length ? <div>Cart is empty</div> : '' }\n      </div>\n      {cartItems.map((item) => (\n        <div key={item.id} className=\"row\">\n          <div className=\"col-2\">{item.name}</div>\n          <div className=\"col-2\">\n            <button onClick={() => onAdd(item)} className=\"btn-success mr-2\">+</button>\n            <button onClick={() => onRemove(item)} className=\"btn-danger\">-</button>\n          </div>\n          <div className=\"col-2 text-right\">\n            {item.cuantity} x ${item.id.toFixed(2)}\n          </div>\n        </div>\n      ))}\n      {cartItems.length ?  (\n        <div>\n          <hr></hr>\n          <div className=\"row\">\n            <div className=\"col-2\">Total price</div>\n            <div className=\"col-1 text-right\"><strong>${totalPrice.toFixed(2)}</strong></div>\n          </div>\n          <hr/>\n          <div className=\"row\">\n            <StripeCheckout\n              stripeKey={process.env.REACT_APP_STRIPE_KEY}\n              token={handleToken}\n              billingAddress\n              shippingAddress\n              amount={totalPrice * 100}\n              name=\"Pokemons\"\n            />\n            <ToastContainer />\n          </div>\n        </div>\n      ) : ''}\n    </aside>\n  )\n}\n\nexport default Cart;\n","import React from 'react';\n\nconst Order = (props) => { \n  const { order } = props;\n\n  return (\n    <div>\n      {order.length === 0 ? <div>No orders yet</div> :  \n        <div>\n        <aside className=\"col\">\n          <h2>Items from order #{order.details.created}</h2>\n          <div className=\"row\">\n            <div className=\"col\">Person name: {order.details.card.name}</div>\n            <div className=\"col\">city: {order.details.card.address_city}</div>\n            <div className=\"col\">Person email: {order.details.email}</div>\n            <div className=\"col\">Person country: {order.details.card.country}</div>\n          </div>\n        </aside>\n              {order.items.cartItems ?\n                (order.items.cartItems.map((pokemon) =>\n                  <div key={pokemon.name} className=\"row\">\n                  <div className=\"col\">Article: {pokemon.name}\n                    <div className=\"col text-right\">Price: ${pokemon.id}\n                    </div>\n                  </div>\n                </div>\n                )) : <div className=\"bg-warning text-center\">Loading...</div>\n              }\n          <div>\n            <hr></hr>\n            <div className=\"row\">\n              <div className=\"col-2\">Total price</div>\n              <div className=\"col-1 text-right\"><strong>${order.items.total.toFixed(2)}</strong></div>\n            </div>\n            </div>\n          <hr/>\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default Order;\n","import './App.css';\nimport React, { useState } from 'react'; \nimport PokemonList from './components/PokemonList/PokemonList'\nimport Header from './components/Header/Header'\nimport Cart from './components/Cart/Cart'\nimport Order from './components/Order/Order'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  const [ cartItems, setCartItems ] = useState([]);\n  const [ order, setOrder ] = useState([]);\n\n  const onAdd = (pokemon) =>{\n    const exist = cartItems.find(item => item.id === pokemon.id);\n    if(exist){\n      setCartItems(cartItems.map(item => item.id === pokemon.id ? {...exist, cuantity: exist.cuantity + 1} : item));\n    }else{\n      setCartItems([...cartItems, {...pokemon, cuantity: 1}]);\n    }\n  }\n\n  const onRemove = (pokemon) =>{\n    const exist = cartItems.find((item) => item.id === pokemon.id);\n    if(exist.cuantity === 1){\n      setCartItems(cartItems.filter((item) => item.id !== pokemon.id));\n    }else{\n      setCartItems(\n        cartItems.map((item) =>\n          item.id === pokemon.id ? {...exist, cuantity: exist.cuantity - 1} : item\n        )\n      );\n    }\n  }\n\n  const onClean = () => {\n    setCartItems([]);\n  }\n\n  const onCreateOrder = (order) => {\n    setOrder(order);\n  }\n\n  return (\n    <Router>\n        <Header\n          countCartItems={cartItems.length}\n        /> \n       <div className=\"container\">\n          <Switch>\n             <Route path=\"/cart\" render={() =>\n               <Cart\n                 cartItems={cartItems}\n                 onAdd={onAdd}\n                 onRemove={onRemove}\n                 onClean={onClean}\n                 onCreateOrder={onCreateOrder}\n               />\n             }/>\n             <Route path=\"/orders\" render={() => \n                 <Order\n                   order={order}\n                 />\n             }/>\n             <Route path=\"/\" exact render={() =>\n               <PokemonList\n                 onAdd={onAdd}\n               />\n             }/>\n          </Switch>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}